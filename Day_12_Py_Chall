import random
import string


def main():
    command = input('Select the lv of the exercise:\n1. Lv 1\n2. Lv 2\n3. Lv 3\n')
    try:
        match command:
            case '1':
                print(random_id())
                print(user_id_gen_by_user())
                print(rgb_color_gen())
            case '2':
                print(list_of_hexadecimal_colors(3))
                print(list_of_rgb_colors(3))
                print(generate_colors(4))
            case '3':
                print(shuffle_list([1, 2, 3, 4, 5, 6]))
                print(random_array())
    except ValueError:
        return 'Invalid entries'


# 1. Write a function which generates a six digit/character random_user_id.
def random_id():
    user_id = ''
    for i in range(0, 5):
        choice = random.randint(1, 2)
        if choice == 1:
            random_char = random.choice(string.ascii_letters)
        else:
            random_char = random.choice(string.digits)
        user_id = user_id + random_char
    return user_id


# 2. Modify the previous task. Declare a function named user_id_gen_by_user. It doesnâ€™t take any parameters but it
# takes two inputs using input(). One of the inputs is the number of characters and the second input is the number of
# IDs which are supposed to be generated.
def user_id_gen_by_user():
    try:
        len_of_id = input('Please enter the length of the id you wish to create:\n')
        number_of_id = input('Please enter how many id\'s you want yo crate: \n')
        len_of_id, number_of_id = int(len_of_id), int(number_of_id)
        lst_of_ids = []
        for ids in range(0, number_of_id):
            user_id = ''
            for i in range(0, len_of_id):
                choice = random.randint(1, 2)
                if choice == 1:
                    random_char = random.choice(string.ascii_letters)
                else:
                    random_char = random.choice(string.digits)
                user_id = user_id + random_char
            lst_of_ids.append(user_id)
        return lst_of_ids
    except ValueError:
        return 'Invalid entries'


# 3. Write a function named rgb_color_gen. It will generate rgb colors (3 values ranging from 0 to 255 each).# rgb(
# 125,244,255) - the output should be in this form
def rgb_color_gen():
    rgb = []
    for colors in range(0, 3):
        color = random.randint(0, 255)
        rgb.append(color)
    return f'rgb{rgb}'


# Exercises: Level 2  #1. Write a function list_of_hexa_colors which returns any number of hexadecimal colors in an
# array (six hexadecimal numbers written after #. Hexadecimal numeral system is made out of 16 symbols, 0-9 and first
# 6 letters of the alphabet, a-f
def list_of_hexadecimal_colors(number_of_colors):
    try:
        lst_of_colors = []
        for colors in range(0, number_of_colors):
            color = ''
            for i in range(0, 6):
                random_col = random.choice(string.hexdigits)
                color = color + random_col
            lst_of_colors.append(color)
        return lst_of_colors
    except ValueError:
        return 'Invalid entries'


# 2. Write a function list_of_rgb_colors which returns any number of RGB colors in an array.

def list_of_rgb_colors(number_of_colors):
    lst_of_colors = []
    for nb_colors in range(0, number_of_colors):
        rgb = []
        for colors in range(0, 3):
            color = random.randint(0, 255)
            rgb.append(color)
        lst_of_colors.append(f'rgb{rgb}')
    return lst_of_colors


# 3. Write a function generate_colors which can generate any number of hexa or rgb colors.

def generate_colors(nb_colors):
    type_of_color = input('Select the type of color you wish to create:\n 1.Hexadecimal\n2.RGB\n')
    type_of_color = int(type_of_color)
    if type_of_color == 1:
        return list_of_rgb_colors(nb_colors)
    elif type_of_color == 2:
        return list_of_rgb_colors(nb_colors)
    else:
        return 'Invalid selection'


# Lv 3
# Call your function shuffle_list, it takes a list as a parameter and it returns a shuffled list
def shuffle_list(a_list):
    shuffled_list = []
    for item in range(0, len(a_list)):
        shuffled_item = a_list[random.randint(0, len(a_list) - 1)]
        shuffled_list.append(shuffled_item)
        a_list.remove(shuffled_item)
    return shuffled_list


# Write a function which returns an array of seven random numbers in a range of 0-9. All the numbers must be unique.
def random_array():
    set_of_nb = [i for i in range(0, 10)]
    array = ''
    for i in range(0, 7):
        random_number = set_of_nb[random.randint(0, len(set_of_nb) - 1)]
        array = array + str(random_number)
        set_of_nb.remove(random_number)
    return array


main()
